import std::io::{println}

fn foo(a) {
    match a {
        null => {
            return 0
        }
        true => {
            return 1
        }
        false => {
            return 2
        }
        1 => {
            return 3
        }
        2 | 3 => {
            return 4
        }
        "4" | 4 | 4.0 => {
            return 5
        }
        {"a": a, "b": b} => {
            return a + b
        }
        {"a": a, "b": b, ...} => {
            return a - b
        }
        ["t", a, b] => {
            return a + b
        }
        [a, "t", b, ...] => {
            return a - b
        }
        {"foo": {"a": a}, "bar": ["b", b]} => {
            return a + b
        }
        _ => {
            return 100
        }
    }
}

assert(foo(null) == 0)
assert(foo(true) == 1)
assert(foo(false) == 2)
assert(foo(1) == 3)
assert(foo(2) == 4)
assert(foo(3) == 4)
assert(foo("4") == 5)
assert(foo(4) == 5)
assert(foo(4.0) == 5)
assert(foo(4.0) == 5)
assert(foo({"a": 1, "b": 2}) == 3)
assert(foo({"a": 1, "b": 2, "c": 3}) == -1)
assert(foo(["t", 1, 2]) == 3)
assert(foo([1, "t", 2, "t"]) == -1)
assert(foo({"foo": {"a": 1}, "bar": ["b", 2]}) == 3)
assert(foo(100) == 100)
assert(foo({"foo": {"a": 1}, "bar": ["b", 2], "c": "c"}) == 100)
